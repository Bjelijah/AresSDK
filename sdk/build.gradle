plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 25
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.13"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    buildFeatures {
        viewBinding = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}
kapt{
    arguments{
        arg("AROUTER_MODULE_NAME",project.getName())
    }
}
dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'com.github.Bjelijah:SDP:1.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.1.0'
    implementation 'com.alibaba:arouter-api:1.5.0'
    implementation 'com.alibaba:arouter-compiler:1.2.2'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'org.aspectj:aspectjtools:1.9.6'
}

import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

final def log = project.logger

android.libraryVariants.all{ variant ->

    variant.outputs.all { output->
        JavaCompile javaCompile = variant.javaCompileProvider.get()
        javaCompile.doLast {
            String[] args = ["-showWeaveInfo",
                             "-1.8",
                             "-inpath", javaCompile.destinationDir.toString(),
                             "-aspectpath", javaCompile.classpath.asPath,
                             "-d", javaCompile.destinationDir.toString(),
                             "-classpath", javaCompile.classpath.asPath,
                             "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]

            log.debug "ajc args: " + Arrays.toString(args)

            def fullName = ""
            output.name.tokenize('-').eachWithIndex { token, index ->
                fullName = fullName + (index == 0 ? token : token.capitalize())
            }
            println(fullName)
            String[] kotlinArgs = ["-showWeaveInfo",
                                   "-1.8",
                                   "-inpath", project.buildDir.path + "/tmp/kotlin-classes/" + fullName,
                                   "-aspectpath", javaCompile.classpath.asPath,
                                   "-d", project.buildDir.path + "/tmp/kotlin-classes/" + fullName,
                                   "-classpath", javaCompile.classpath.asPath,
                                   "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]

            MessageHandler handler = new MessageHandler(true)
            new Main().run(args, handler)
            new Main().run(kotlinArgs, handler)

            for (IMessage message : handler.getMessages(null, true)) {
                switch (message.getKind()) {
                    case IMessage.ABORT:
                    case IMessage.ERROR:
                    case IMessage.FAIL:
                        log.error message.message, message.thrown
                        break
                    case IMessage.WARNING:
                        log.warn message.message, message.thrown
                        break
                    case IMessage.INFO:
                        log.info message.message, message.thrown
                        break
                    case IMessage.DEBUG:
                        log.debug message.message, message.thrown
                        break
                }
            }
        }
    }

}



group '[GROUP_ID]'
version '[VERSION]'
def artifactId = '[ARTIFACT_ID]'

apply plugin: 'maven'
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'https://packages.aliyun.com/maven/repository/2112588-release-Pgyrf2/') {
                authentication(
                        userName: '60cb08ecaa6381038e50f87c',
                        password: 'KvKjXDht(lqq'
                )
            }
            snapshotRepository(url: 'https://packages.aliyun.com/maven/repository/2112588-snapshot-3H0zwN/') {
                authentication(
                        userName: '60cb08ecaa6381038e50f87c',
                        password: 'KvKjXDht(lqq'
                )
            }
            pom.version = '1.0.16'
            pom.artifactId = 'SDK'
            pom.groupId = 'com.cbj.Bjelijah'
        }
    }
}